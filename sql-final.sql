-- ===================================================================
-- SCRIPT SQL FINAL PARA O BANCO DE DADOS DO SISTEMA DE AGENDAMENTO
-- Versão: 1.0
-- Descrição: Cria todas as tabelas e tipos necessários para o funcionamento
--            do sistema, sem incluir as políticas de segurança (RLS).
-- ===================================================================


-- ========= PASSO 1: CRIAÇÃO DOS TIPOS (ENUMS) =========
-- Estes tipos garantem a integridade dos dados nos campos de status.

CREATE TYPE public.status_agendamento AS ENUM ('confirmado', 'cancelado', 'concluido');
CREATE TYPE public.status_horario AS ENUM ('disponivel', 'reservado');

-- ========= PASSO 2: CRIAÇÃO DAS TABELAS PRINCIPAIS =========

-- Tabela para armazenar os profissionais que trabalham no salão.
CREATE TABLE public.profissionais (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome text NOT NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL
);

-- Tabela para armazenar os serviços oferecidos pelo salão.
CREATE TABLE public.servicos (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome text NOT NULL,
  descricao text NULL,
  preco numeric(10, 2) NOT NULL,
  duracao_minutos integer NOT NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL
);


-- ========= PASSO 3: CRIAÇÃO DAS TABELAS DEPENDENTES =========

-- Tabela para armazenar cada slot de tempo que um profissional disponibiliza.
CREATE TABLE public.horarios_disponiveis (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  -- Se um profissional for excluído, seus horários disponíveis também serão.
  id_profissional bigint NOT NULL REFERENCES public.profissionais(id) ON DELETE CASCADE,
  horario_inicio timestamp with time zone NOT NULL,
  status public.status_horario DEFAULT 'disponivel' NOT NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  -- Garante que não se pode cadastrar o mesmo horário para o mesmo profissional duas vezes.
  UNIQUE (id_profissional, horario_inicio)
);

-- Tabela para armazenar os agendamentos feitos pelos clientes.
CREATE TABLE public.agendamentos (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  -- Se um serviço for excluído, o agendamento permanece (comportamento padrão).
  id_servico bigint NOT NULL REFERENCES public.servicos(id),
  horario_inicio timestamp with time zone NOT NULL,
  horario_fim timestamp with time zone NOT NULL,
  nome_cliente text NOT NULL,
  telefone_cliente varchar(20) NOT NULL,
  status public.status_agendamento DEFAULT 'confirmado' NOT NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL
);


-- ========= FIM DO SCRIPT =========
-- Lembre-se de habilitar o RLS (Row Level Security) e criar as políticas
-- de acesso para cada tabela no painel do Supabase após executar este script.
